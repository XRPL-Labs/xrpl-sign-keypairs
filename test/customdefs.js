'use strict';
const sign = require("..");
// const sortSigner = require("../lib/sort_signer");
const keypairs = require("ripple-keypairs");
const {XrplDefinitions} = require('ripple-binary-codec');
const assert = require('assert');

const testkeys = [
    "sp8nE7459mWYQRQtXHvq17xm8tRyN",
    "snCdBeMquLRfoFLsJpSEM9atptPFX",
    "sn9UvPSEv5W5c95KHum5CcQ8S9WfG",
    "shqHRHUWFPkGPdUfKVTkFsfQsUe8Q",
    "sscUnb67uX5MCGBCCJTZaE4BamcVe"
]

const accounts = testkeys.map((v) => {
    const kp = keypairs.deriveKeypair(v)
    const address = keypairs.deriveAddress(kp.publicKey)
    return {
        keypair : kp,
        address : address,
    }
})

describe('Custom definitions', function () {
    it('Custom definitions', function(){
        const definitions = new XrplDefinitions(require('./customDefinitions.json'))
        const tx = {}
        tx.TransactionType = 'SetHook'
        tx.Account = accounts[0].address
        tx.Destination = accounts[1].address
        tx.Hooks = [ { Hook: {
            CreateCode: "0061736D01000000011C0460057F7F7F7F7F017E60037F7F7E017E60027F7F017F60017F017E02230303656E76057472616365000003656E7606616363657074000103656E76025F670002030201030503010002062B077F0141B088040B7F004180080B7F0041A6080B7F004180080B7F0041B088040B7F0041000B7F0041010B07080104686F6F6B00030AC4800001C0800001017F230041106B220124002001200036020C41920841134180084112410010001A410022002000420010011A41012200200010021A200141106A240042000B0B2C01004180080B254163636570742E633A2043616C6C65642E00224163636570742E633A2043616C6C65642E22",
            Flags: 1,
            HookApiVersion: 0,
            HookNamespace: "F".repeat(64),
            HookOn: "F".repeat(58) + "BFFFFE",
        } } ]

        const txJSON = JSON.stringify(tx)
        const r = sign(txJSON, accounts[0].keypair, { definitions })

        assert( r.id === '8F48C2DB243FB054E3DC7552368D0DEBFAA0DDB0BB77AEA6324095881F4B4079');
        assert( r.signedTransaction
    })
})
